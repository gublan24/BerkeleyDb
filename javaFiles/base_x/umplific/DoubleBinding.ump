namespace com.sleepycat.bind.tuple;

class DoubleBinding
{
  isA TupleBinding;
  depend de.ovgu.cide.jakutil.*;
  depend com.sleepycat.je.DatabaseEntry;
    private static final int DOUBLE_SIZE = 8;

    public Object entryToObject(TupleInput input) {
	return new Double(input.readDouble());
    }

    public void objectToEntry(Object object, TupleOutput output) {
	output.writeDouble(((Number) object).doubleValue());
    }

    protected TupleOutput getTupleOutput(Object object) {
	return sizedOutput();
    }

    /** 
     * Converts an entry buffer into a simple <code>double</code> value.
     * @param entryis the source entry buffer.
     * @return the resulting value.
     */
    public static double entryToDouble(DatabaseEntry entry) {
	return entryToInput(entry).readDouble();
    }

    /** 
     * Converts a simple <code>double</code> value into an entry buffer.
     * @param valis the source value.
     * @param entryis the destination entry buffer.
     */
    public static void doubleToEntry(double val, DatabaseEntry entry) {
	outputToEntry(sizedOutput().writeDouble(val), entry);
    }

    /** 
     * Returns a tuple output object of the exact size needed, to avoid wasting space when a single primitive is output.
     */
    private static TupleOutput sizedOutput() {
	return new TupleOutput(new byte[DOUBLE_SIZE]);
    }

}
