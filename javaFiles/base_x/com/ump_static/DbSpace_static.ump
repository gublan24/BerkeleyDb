// Original file:/home/abdulaziz/Desktop/BerkeleyDb/javaFiles/base_x/com/sleepycat/je/util/DbSpace.java
namespace com.sleepycat.je.util;
class DbSpace {
  static class Summary  {
      isA Comparable;
      static final String HEADER="  File    Size (KB)  % Used\n" + "--------  ---------  ------";
      Long fileNum;
      long totalSize;
      long obsoleteSize;
      Summary(){
      }
      Summary(    Long fileNum,    FileSummary summary) throws DatabaseException {
        this.fileNum=fileNum;
        totalSize=summary.totalSize;
        obsoleteSize=summary.getObsoleteSize();
      }
      public int compareTo(    Object other){
        Summary o=(Summary)other;
        return utilization() - o.utilization();
      }
      void add(    Summary o){
        totalSize+=o.totalSize;
        obsoleteSize+=o.obsoleteSize;
      }
      void print(    PrintStream out){
        if (fileNum != null) {
          pad(out,Long.toHexString(fileNum.longValue()),8,'0');
        }
   else {
          out.print(" TOTALS ");
        }
        int kb=(int)(totalSize / 1024);
        int util=utilization();
        out.print("  ");
        pad(out,Integer.toString(kb),9,' ');
        out.print("     ");
        pad(out,Integer.toString(util),3,' ');
        out.println();
      }
      int utilization(){
        return UtilizationProfile.utilization(obsoleteSize,totalSize);
      }
      private void pad(    PrintStream out,    String val,    int digits,    char padChar){
        int padSize=digits - val.length();
        for (int i=0; i < padSize; i+=1) {
          out.print(padChar);
        }
        out.print(val);
      }
    }
}
