namespace com.sleepycat.je.log;

class FileSource
{
  isA LogSource;
  depend de.ovgu.cide.jakutil.*;
  depend com.sleepycat.je.dbi.EnvironmentImpl;
  depend com.sleepycat.je.DatabaseException;
  depend java.nio.ByteBuffer;
  depend java.io.RandomAccessFile;
  depend java.io.IOException;
    private RandomAccessFile file;

    private int readBufferSize;

    private FileManager fileManager;

    FileSource(RandomAccessFile file, int readBufferSize, FileManager fileManager) {
	this.file = file;
	this.readBufferSize = readBufferSize;
	this.fileManager = fileManager;
    }

    /** 
     * @see LogSource#release
     */
    public void release() throws DatabaseException {
    }

    /** 
     * @see LogSource#getBytes
     */
    public ByteBuffer getBytes(long fileOffset) throws IOException {
	ByteBuffer destBuf = ByteBuffer.allocate(readBufferSize);
	fileManager.readFromFile(file, destBuf, fileOffset);
	assert EnvironmentImpl.maybeForceYield();
	destBuf.flip();
	return destBuf;
    }

    /** 
     * @see LogSource#getBytes
     */
    public ByteBuffer getBytes(long fileOffset, int numBytes) throws IOException {
	ByteBuffer destBuf = ByteBuffer.allocate(numBytes);
	fileManager.readFromFile(file, destBuf, fileOffset);
	assert EnvironmentImpl.maybeForceYield();
	destBuf.flip();
	assert destBuf.remaining() >= numBytes : "remaining=" + destBuf.remaining() + " numBytes=" + numBytes;
	return destBuf;
    }

}
