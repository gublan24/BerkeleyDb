namespace com.sleepycat.je.cleaner;

class Iterator
{
  depend de.ovgu.cide.jakutil.*;
  depend com.sleepycat.je.log.LogWritable;
  depend com.sleepycat.je.log.LogUtils;
  depend com.sleepycat.je.log.LogReadable;
  depend java.util.Arrays;
  depend java.nio.ByteBuffer;
    private int index;

    private long priorVal;

    private Iterator() {
    }

    boolean hasNext() {
	return data != null && index < data.length;
    }

    long next() {
	long val = priorVal;
	for (int shift = 0;; shift += 15) {
	    long s = data[index++];
	    if (s < 0) {
		val += (-1 - s) << shift;
	    } else {
		val += s << shift;
		break;
	    }
	}
	priorVal = val;
	return val;
    }

}
