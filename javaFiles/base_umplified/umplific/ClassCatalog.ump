namespace com.sleepycat.bind.serial;

interface ClassCatalog
{
  depend de.ovgu.cide.jakutil.*;
  depend com.sleepycat.je.DatabaseException;
  depend java.io.ObjectStreamClass;
    /** 
     * Close a catalog database and release any cached resources.
     */
    public void close() throws DatabaseException;

    /** 
     * Return the class ID for the current version of the given class description. This is used for storing in serialization streams in place of a full class descriptor, since it is much more compact. To get back the ObjectStreamClass for a class ID, call {@link #getClassFormat(byte[])}. This function causes a new class ID to be assigned if the class description has changed.
     * @param classDescThe class description for which to return the class ID.
     * @return The class ID for the current version of the class.
     */
    public byte[] getClassID(ObjectStreamClass classDesc) throws DatabaseException, ClassNotFoundException;

    /** 
     * Return the ObjectStreamClass for the given class ID. This may or may not be the current class format, depending on whether the class has changed since the class ID was generated.
     * @param classIDThe class ID for which to return the class format.
     * @return The class format for the given class ID, which may or may notrepresent the current version of the class.
     */
    public ObjectStreamClass getClassFormat(byte[] classID) throws DatabaseException, ClassNotFoundException;

}