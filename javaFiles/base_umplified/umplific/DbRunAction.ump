namespace com.sleepycat.je.util;

class DbRunAction
{
  depend de.ovgu.cide.jakutil.*;
  depend com.sleepycat.je.utilint.CmdUtil;
  depend com.sleepycat.je.dbi.EnvironmentImpl;
  depend com.sleepycat.je.config.EnvironmentParams;
  depend com.sleepycat.je.Transaction;
  depend com.sleepycat.je.OperationStatus;
  depend com.sleepycat.je.LockMode;
  depend com.sleepycat.je.EnvironmentMutableConfig;
  depend com.sleepycat.je.EnvironmentConfig;
  depend com.sleepycat.je.Environment;
  depend com.sleepycat.je.DbInternal;
  depend com.sleepycat.je.DatabaseException;
  depend com.sleepycat.je.DatabaseEntry;
  depend com.sleepycat.je.DatabaseConfig;
  depend com.sleepycat.je.Database;
  depend com.sleepycat.je.Cursor;
  depend com.sleepycat.je.CheckpointConfig;
  depend java.text.DecimalFormat;
  depend java.io.File;
    private static final int CLEAN = 1;

    private static final int CHECKPOINT = 4;

    public static void main(String[] argv) {
	new DbRunAction_main(argv).execute();
    }

    private static String getSecs(long start, long end) {
	return (end - start) / 1000 + " secs";
    }

    private static void preload(Environment env, String dbName) throws DatabaseException {
	System.out.println("Preload starting");
	Database db = env.openDatabase(null, dbName, null);
	Cursor cursor = db.openCursor(null, null);
	try {
	    DatabaseEntry key = new DatabaseEntry();
	    DatabaseEntry data = new DatabaseEntry();
	    int count = 0;
	    while (cursor.getNext(key, data, LockMode.DEFAULT) == OperationStatus.SUCCESS) {
		count++;
		if ((count % 50000) == 0) {
		    System.out.println(count + "...");
		}
	    }
	    System.out.println("Preloaded " + count + " records");
	} finally {
	    cursor.close();
	    db.close();
	}
    }

    private static void usage() {
	System.out.println("Usage: \n " + CmdUtil.getJavaCommand(DbRunAction.class));
	System.out.println("  -h <environment home> ");
	System.out.println("  -a <clean|compress|evict|checkpoint|removedb>");
	System.out.println("  -ro (read-only - defaults to read-write)");
	System.out.println("  -s <dbName> (for preloading of evict or db remove)");
    }

}
