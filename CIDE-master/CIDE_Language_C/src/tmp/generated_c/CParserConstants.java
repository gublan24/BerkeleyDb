/* Generated By:JavaCC: Do not edit this line. CParserConstants.java */
package tmp.generated_c;

public interface CParserConstants {

  int EOF = 0;
  int INTEGER_LITERAL = 12;
  int DECIMAL_LITERAL = 13;
  int HEX_LITERAL = 14;
  int OCTAL_LITERAL = 15;
  int FLOATING_POINT_LITERAL = 16;
  int EXPONENT = 17;
  int CHARACTER_LITERAL = 18;
  int STRING_LITERAL = 19;
  int CONTINUE = 20;
  int VOLATILE = 21;
  int REGISTER = 22;
  int UNSIGNED = 23;
  int TYPEDEF = 24;
  int DFLT = 25;
  int DOUBLE = 26;
  int SIZEOF = 27;
  int SWITCH = 28;
  int RETURN = 29;
  int EXTERN = 30;
  int STRUCT = 31;
  int STATIC = 32;
  int SIGNED = 33;
  int WHILE = 34;
  int BREAK = 35;
  int UNION = 36;
  int CONST = 37;
  int FLOAT = 38;
  int SHORT = 39;
  int ELSE = 40;
  int CASE = 41;
  int LONG = 42;
  int ENUM = 43;
  int AUTO = 44;
  int VOID = 45;
  int CHAR = 46;
  int GOTO = 47;
  int FOR = 48;
  int INT = 49;
  int IF = 50;
  int DO = 51;
  int EQ = 52;
  int ASSSTAR = 53;
  int ASSSLASH = 54;
  int ASSPERCENT = 55;
  int ASSPLUS = 56;
  int ASSMINUS = 57;
  int ASSSL = 58;
  int ASSSR = 59;
  int ASSAMP = 60;
  int ASSTIL = 61;
  int ASSOR = 62;
  int EQEQ = 63;
  int NOTEQ = 64;
  int SL = 65;
  int SR = 66;
  int SLEQ = 67;
  int SREQ = 68;
  int SLSL = 69;
  int SRSR = 70;
  int PLUS = 71;
  int MINUS = 72;
  int PLUSPLUS = 73;
  int MINUSMINUS = 74;
  int STAR = 75;
  int SLASH = 76;
  int PERCENT = 77;
  int OR = 78;
  int OROR = 79;
  int NOT = 80;
  int TILDE = 81;
  int AND = 82;
  int ANDAND = 83;
  int COMMA = 84;
  int IDENTIFIER = 85;
  int LETTER = 86;
  int DIGIT = 87;

  int DEFAULT = 0;
  int PREPROCESSOR_OUTPUT = 1;

  String[] tokenImage = {
    "<EOF>",
    "\" \"",
    "\"\\t\"",
    "\"\\n\"",
    "\"\\r\"",
    "<token of kind 5>",
    "<token of kind 6>",
    "\"#\"",
    "\"\\n\"",
    "\"\\\\\\n\"",
    "\"\\\\\\r\\n\"",
    "<token of kind 11>",
    "<INTEGER_LITERAL>",
    "<DECIMAL_LITERAL>",
    "<HEX_LITERAL>",
    "<OCTAL_LITERAL>",
    "<FLOATING_POINT_LITERAL>",
    "<EXPONENT>",
    "<CHARACTER_LITERAL>",
    "<STRING_LITERAL>",
    "\"continue\"",
    "\"volatile\"",
    "\"register\"",
    "\"unsigned\"",
    "\"typedef\"",
    "\"default\"",
    "\"double\"",
    "\"sizeof\"",
    "\"switch\"",
    "\"return\"",
    "\"extern\"",
    "\"struct\"",
    "\"static\"",
    "\"signed\"",
    "\"while\"",
    "\"break\"",
    "\"union\"",
    "\"const\"",
    "\"float\"",
    "\"short\"",
    "\"else\"",
    "\"case\"",
    "\"long\"",
    "\"enum\"",
    "\"auto\"",
    "\"void\"",
    "\"char\"",
    "\"goto\"",
    "\"for\"",
    "\"int\"",
    "\"if\"",
    "\"do\"",
    "\"=\"",
    "\"*=\"",
    "\"/=\"",
    "\"%=\"",
    "\"+=\"",
    "\"-+\"",
    "\"<<=\"",
    "\">>=\"",
    "\"&=\"",
    "\"^=\"",
    "\"|=\"",
    "\"==\"",
    "\"!=\"",
    "\"<\"",
    "\">\"",
    "\"<=\"",
    "\">=\"",
    "\"<<\"",
    "\">>\"",
    "\"+\"",
    "\"-\"",
    "\"++\"",
    "\"--\"",
    "\"*\"",
    "\"/\"",
    "\"%\"",
    "\"|\"",
    "\"||\"",
    "\"!\"",
    "\"~\"",
    "\"&\"",
    "\"&&\"",
    "\",\"",
    "<IDENTIFIER>",
    "<LETTER>",
    "<DIGIT>",
    "\";\"",
    "\"{\"",
    "\"}\"",
    "\":\"",
    "\"(\"",
    "\")\"",
    "\"[\"",
    "\"]\"",
    "\".\"",
    "\"?\"",
    "\"^\"",
    "\"->\"",
  };

}
