// Original file:/home/abdulaziz/Desktop/BerkeleyDb/all_feature_try/base/com/sleepycat/je/log/StatsFileReader.java
class StatsFileReader {
  static class EntryInfo {
      public int count;
      public int provisionalCount;
      public long totalBytes;
      public int minBytes;
      public int maxBytes;
      EntryInfo(){
        count=0;
        provisionalCount=0;
        totalBytes=0;
        minBytes=0;
        maxBytes=0;
      }
    }
  static class LogEntryTypeComparator implements Comparator {
      public int compare(    Object o1,    Object o2){
        if (o1 == null) {
          return -1;
        }
        if (o2 == null) {
          return 1;
        }
        if (o1 instanceof LogEntryType && o2 instanceof LogEntryType) {
          Byte t1=new Byte(((LogEntryType)o1).getTypeNum());
          Byte t2=new Byte(((LogEntryType)o2).getTypeNum());
          return t1.compareTo(t2);
        }
   else {
          throw new IllegalArgumentException("non LogEntryType passed to LogEntryType.compare");
        }
      }
    }
  static class CheckpointCounter {
      public long startCkptLsn=DbLsn.NULL_LSN;
      public long endCkptLsn=DbLsn.NULL_LSN;
      public int preStartLNTxnCount;
      public int preStartLNCount;
      public int preStartMapLNTxnCount;
      public int preStartMapLNCount;
      public int postStartLNTxnCount;
      public int postStartLNCount;
      public int postStartMapLNTxnCount;
      public int postStartMapLNCount;
      public void increment(    FileReader reader,    byte currentEntryTypeNum){
        if (currentEntryTypeNum == LogEntryType.LOG_CKPT_START.getTypeNum()) {
          startCkptLsn=reader.getLastLsn();
        }
   else       if (currentEntryTypeNum == LogEntryType.LOG_LN_TRANSACTIONAL.getTypeNum()) {
          if (startCkptLsn == DbLsn.NULL_LSN) {
            preStartLNTxnCount++;
          }
   else {
            postStartLNTxnCount++;
          }
        }
   else       if (currentEntryTypeNum == LogEntryType.LOG_LN.getTypeNum()) {
          if (startCkptLsn == DbLsn.NULL_LSN) {
            preStartLNCount++;
          }
   else {
            postStartLNCount++;
          }
        }
   else       if (currentEntryTypeNum == LogEntryType.LOG_MAPLN.getTypeNum()) {
          if (startCkptLsn == DbLsn.NULL_LSN) {
            preStartMapLNCount++;
          }
   else {
            postStartMapLNCount++;
          }
        }
   else       if (currentEntryTypeNum == LogEntryType.LOG_MAPLN_TRANSACTIONAL.getTypeNum()) {
          if (startCkptLsn == DbLsn.NULL_LSN) {
            preStartMapLNTxnCount++;
          }
   else {
            postStartMapLNTxnCount++;
          }
        }
      }
    }
}
