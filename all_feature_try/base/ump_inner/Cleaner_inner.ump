// Original file:/home/abdulaziz/Desktop/BerkeleyDb/all_feature_try/base/com/sleepycat/je/cleaner/Cleaner.java
class Cleaner {
  @MethodObject static class Cleaner_processPending {
      Cleaner_processPending(    Cleaner _this){
        this._this=_this;
      }
      void execute() throws DatabaseException {
        dbMapTree=_this.env.getDbMapTree();
        pendingLNs=_this.fileSelector.getPendingLNs();
        if (pendingLNs != null) {
          location=new TreeLocation();
          for (int i=0; i < pendingLNs.length; i+=1) {
            info=pendingLNs[i];
            dbId1=info.getDbId();
            db1=dbMapTree.getDb(dbId1,_this.lockTimeout);
            key=info.getKey();
            dupKey=info.getDupKey();
            ln=info.getLN();
            this.hook114();
            _this.processPendingLN(ln,db1,key,dupKey,location);
          }
        }
      }
      protected Cleaner _this;
      protected DbTree dbMapTree;
      protected LNInfo[] pendingLNs;
      protected TreeLocation location;
      protected LNInfo info;
      protected DatabaseId dbId1;
      protected DatabaseImpl db1;
      protected byte[] key;
      protected byte[] dupKey;
      protected LN ln;
      protected DatabaseId[] pendingDBs;
      protected DatabaseId dbId2;
      protected DatabaseImpl db2;
      protected void hook114() throws DatabaseException {
      }
    }
}
