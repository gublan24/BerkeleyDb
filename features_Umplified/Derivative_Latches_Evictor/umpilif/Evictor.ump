namespace com.sleepycat.je.evictor;

class Evictor
{
  depend com.sleepycat.je.latch.LatchSupport;
    protected long hook374(INList inList, IN target, ScanIterator scanIter, boolean envIsReadOnly, long evictedBytes)
	    throws DatabaseException {
	try {
	    evictedBytes = original(inList, target, scanIter, envIsReadOnly, evictedBytes);
	} finally {
	    target.releaseLatchIfOwner();
	}
	return evictedBytes;
    }

    protected long hook375(IN child, IN parent, int index, INList inlist, ScanIterator scanIter, boolean envIsReadOnly,
	    long evictBytes) throws DatabaseException {
	try {
	    evictBytes = original(child, parent, index, inlist, scanIter, envIsReadOnly, evictBytes);
	} finally {
	    parent.releaseLatch();
	}
	return evictBytes;
    }

    protected void hook378(IN parent) throws DatabaseException {
	assert parent.isLatchOwner();
	original(parent);
    }

    protected long hook379(IN parent, int index, INList inlist, ScanIterator scanIter, boolean envIsReadOnly,
	    long evictBytes, IN renewedChild) throws DatabaseException {
	try {
	    evictBytes = original(parent, index, inlist, scanIter, envIsReadOnly, evictBytes, renewedChild);
	} finally {
	    renewedChild.releaseLatch();
	}
	return evictBytes;
    }

}
