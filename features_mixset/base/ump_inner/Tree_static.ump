
namespace com.sleepycat.je.tree;

class Tree {

  static class SearchType {
      public static final SearchType NORMAL=new SearchType();
      public static final SearchType LEFT=new SearchType();
      public static final SearchType RIGHT=new SearchType();

    
    }
  static class RootChildReference{
      isA ChildReference;
  
      private RootChildReference(    Node target,    byte[] key,    long lsn){
        super(target,key,lsn);
      }
      private RootChildReference(    Node target,    byte[] key,    long lsn,    byte existingState){
        super(target,key,lsn,existingState);
      }
      public Node fetchTarget(    DatabaseImpl database,    IN in) throws DatabaseException {
        Label666:           ;  
        return super.fetchTarget(database,in);
      }
      public void setTarget(    Node target){
        Label667:           ;  
        super.setTarget(target);
      }
      public void clearTarget(){
        Label668:           ;  
        super.clearTarget();
      }
      public void setLsn(    long lsn){
        Label669:           ;  
        super.setLsn(lsn);
      }

    }
  static  class SplitInfo {
      IN parent;
      IN child;
      int index;
      
    }



}
