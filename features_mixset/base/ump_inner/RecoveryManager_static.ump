
namespace com.sleepycat.je.recovery;
class RecoveryManager {
  static class TxnNodeId {
      long nodeId;
      long txnId;
 //     TxnNodeId(    long nodeId,    long txnId){
 //       this.nodeId=nodeId;
 //       this.txnId=txnId;
 //     }
      /** 
   * Compare two TxnNodeId objects
   */
      public boolean equals(    Object obj){
        if (this == obj) {
          return true;
        }
        if (!(obj instanceof TxnNodeId)) {
          return false;
        }
        return ((((TxnNodeId)obj).txnId == txnId) && (((TxnNodeId)obj).nodeId == nodeId));
      }
      public int hashCode(){
        return (int)(txnId + nodeId);
      }
      public String toString(){
        return "txnId=" + txnId + "/nodeId="+ nodeId;
      }
    }
  static class RootDeleter {
      isA WithRootLatched;
      Tree tree;
   //   RootDeleter(    Tree tree){
   //     this.tree=tree;
   //   }
      /** 
   * @return true if the in-memory root was replaced.
   */
      public IN doWork(    ChildReference root) throws DatabaseException {
        tree.setRoot(null,false);
        return null;
      }
    }

}
