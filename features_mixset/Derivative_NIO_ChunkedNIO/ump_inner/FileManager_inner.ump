// Original file:/home/abdulaziz/Desktop/BerkeleyDb/ALL_FEATURE/features/Derivative_NIO_ChunkedNIO/com/sleepycat/je/log/FileManager.java
namespace com.sleepycat.je.log;
class FileManager {
   static class FileManager_writeToFile {
      after Label445: execute(){

        if (_this.chunkedNIOSize > 0) {
          useData=data.duplicate();
          origLimit=useData.limit();
          useData.limit(useData.position());
          while (useData.limit() < origLimit) {
            useData.limit((int)(Math.min(useData.limit() + _this.chunkedNIOSize,origLimit)));
            bytesWritten=channel.write(useData,destOffset);
            destOffset+=bytesWritten;
            totalBytesWritten+=bytesWritten;
          }
        }
//   else {
 //         original();
  //      }
      }
    }
   static class FileManager_readFromFile {
      after Label446: execute(){
        if (_this.chunkedNIOSize > 0) {
          readLength=readBuffer.limit();
          currentPosition=offset;
          while (readBuffer.position() < readLength) {
            readBuffer.limit((int)(Math.min(readBuffer.limit() + _this.chunkedNIOSize,readLength)));
            bytesRead1=channel.read(readBuffer,currentPosition);
            if (bytesRead1 < 1)           break;
            currentPosition+=bytesRead1;
          }
        }
//   else {
//          original();
 //       }
      }
    }
}
