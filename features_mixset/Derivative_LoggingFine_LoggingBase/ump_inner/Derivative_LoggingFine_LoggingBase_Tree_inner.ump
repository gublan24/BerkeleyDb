
namespace com.sleepycat.je.tree;
class Tree {

 after traceMutate(Level ,BIN ,LN ,  LN ,long ,DupCountLN ,long ,DIN ,  long , DBIN ,long ) {
			Logger logger = database.getDbEnvironment().getLogger();
			if (logger.isLoggable(level)) {
				StringBuffer sb = new StringBuffer();
				sb.append(TRACE_MUTATE);
				sb.append(" existingLn=");
				sb.append(existingLn.getNodeId());
				sb.append(" newLn=");
				sb.append(newLn.getNodeId());
				sb.append(" newLnLsn=");
				sb.append(DbLsn.getNoFormatString(newLsn));
				sb.append(" dupCountLN=");
				sb.append(dupCountLN.getNodeId());
				sb.append(" dupRootLsn=");
				sb.append(DbLsn.getNoFormatString(dupRootLsn));
				sb.append(" rootdin=");
				sb.append(dupRoot.getNodeId());
				sb.append(" ddinLsn=");
				sb.append(DbLsn.getNoFormatString(ddinLsn));
				sb.append(" dbin=");
				sb.append(dupBin.getNodeId());
				sb.append(" dbinLsn=");
				sb.append(DbLsn.getNoFormatString(dbinLsn));
				sb.append(" bin=");
				sb.append(theBin.getNodeId());
					
				logger.log(level, sb.toString());
			}
 
 }

 after traceSplitRoot(Level ,   String ,   IN ,   long ,   IN ,   long ) {      
        Logger logger = database.getDbEnvironment().getLogger();
        if (logger.isLoggable(level)) {
            StringBuffer sb = new StringBuffer();
            sb.append(splitType);
            sb.append(" newRoot=").append(newRoot.getNodeId());
            sb.append(" newRootLsn=").
		append(DbLsn.getNoFormatString(newRootLsn));
            sb.append(" oldRoot=").append(oldRoot.getNodeId());
            sb.append(" oldRootLsn=").
		append(DbLsn.getNoFormatString(oldRootLsn));
            logger.log(level, sb.toString());
        }

  }
}
