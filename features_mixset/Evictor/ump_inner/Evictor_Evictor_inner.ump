
namespace com.sleepycat.je.evictor;

class Evictor {

  static  class EvictProfile {
      private List candidates=new ArrayList();
      public boolean count(    IN target){
        candidates.add(new Long(target.getNodeId()));
        return true;
      }
      public List getCandidates(){
        return candidates;
      }
      public boolean clear(){
        candidates.clear();
        return true;
      }
    }
  static class ScanIterator {
      private INList inList;
      private Iterator iter;
      private IN nextMark;
      ScanIterator(    IN startingIN,    INList inList) throws DatabaseException {
        this.inList=inList;
        reset(startingIN);
      }
      void reset(    IN startingIN) throws DatabaseException {
        iter=inList.tailSet(startingIN).iterator();
      }
      IN mark() throws DatabaseException {
        if (iter.hasNext()) {
          nextMark=(IN)iter.next();
        }
   else {
          nextMark=(IN)inList.first();
        }
        return (IN)nextMark;
      }
      void resetToMark() throws DatabaseException {
        reset(nextMark);
      }
      boolean hasNext(){
        return iter.hasNext();
      }
      IN next(){
        return (IN)iter.next();
      }
      void remove(){
        iter.remove();
      }
    }

}
