namespace com.sleepycat.je.txn;

class TxnManager
{
  depend com.sleepycat.je.latch.LatchSupport;
  depend com.sleepycat.je.latch.Latch;
    private Latch allTxnLatch;

  before Label821: TxnManager(EnvironmentImpl )
{
	allTxnLatch = LatchSupport.makeLatch(DEBUG_NAME, env);
	//original(env);
    }

    after Label822:TxnManager(EnvironmentImpl ){
		if (EnvironmentImpl.getFairLatches()) {
			  lockManager = new LatchedLockManager(env);
		} else 
    
}

    /** 
     * Called when txn is created.
     */
    before  registerTxn(Txn ) {

	allTxnLatch.acquire();
	//original(txn);

    }

    after registerTxn(Txn )  {
	//original(txn);
	allTxnLatch.release();
    }


    /** 
     * Called when txn ends.
     */
  before unRegisterTxn(Txn , boolean ) {
	allTxnLatch.acquire();
	}

	after unRegisterTxn(Txn , boolean ) {
	//try {	    //original(txn, isCommit);	} finally {
	    allTxnLatch.release();
	//}
    }

  after Label823:getFirstActiveLsn(){
		allTxnLatch.acquire();
    }

  after Label823_1:getFirstActiveLsn(){
		allTxnLatch.release();
	
    }

}
