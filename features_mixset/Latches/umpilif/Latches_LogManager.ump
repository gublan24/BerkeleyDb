namespace com.sleepycat.je.log;

class LogManager
{
  depend com.sleepycat.je.latch.LatchSupport;
  depend com.sleepycat.je.latch.Latch;
    protected Latch logWriteLatch;

    after Label502: LogManager(EnvironmentImpl , boolean ){

	logWriteLatch = LatchSupport.makeLatch(DEBUG_NAME, envImpl);
	//original(envImpl);
    }

    after Label503: logInternal(LoggableObject , boolean , boolean ,	 boolean , long , boolean , ByteBuffer , UtilizationTracker ) {
      useLogBuffer.latchForWrite();
	}

    after Label503_1: logInternal(LoggableObject , boolean , boolean ,	 boolean , long , boolean , ByteBuffer , UtilizationTracker ) {
//try {	    usedTemporaryBuffer = original(marshalledBuffer, entrySize, currentLsn, usedTemporaryBuffer, useLogBuffer);} finally {
	    useLogBuffer.release();
	//}
//	return usedTemporaryBuffer;
    }

}
