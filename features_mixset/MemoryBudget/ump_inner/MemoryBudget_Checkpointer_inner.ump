// Original file:/home/abdulaziz/Desktop/BerkeleyDb/ALL_FEATURE/features/MemoryBudget/com/sleepycat/je/recovery/Checkpointer.java
namespace com.sleepycat.je.recovery;
class Checkpointer {
  @MethodObject static class Checkpointer_selectDirtyINs {
      after Label553:execute(){
        totalSize=0;
        mb=_this.envImpl.getMemoryBudget();
        //original();
      }
      
      after Label554: execute(){
        mb.refreshTreeMemoryUsage(totalSize);
        //   original();
      }

      after Label530:execute(){
        totalSize=mb.accumulateNewUsage(in,totalSize);
        //original();
      }
    }
  @MethodObject static class Checkpointer_doCheckpoint {

      after Label548:execute(){
        dirtyMapMemSize=0;
        //original();
      }

      after Label549:execute(){
        mb.updateMiscMemoryUsage(0 - dirtyMapMemSize);
        //original();
      }

      after Label550:execute(){
        mb.updateMiscMemoryUsage(totalSize);
        //original();
      }
      after Label551:execute(){
        totalSize=0;
        //original();
      }
      after Label552:execute(){
        size=nodeSet.size() * MemoryBudget.CHECKPOINT_REFERENCE_SIZE;
        totalSize+=size;
        dirtyMapMemSize+=size;
        //original();
      }
    }
}
