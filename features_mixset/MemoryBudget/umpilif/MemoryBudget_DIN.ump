namespace com.sleepycat.je.tree;

class DIN
{
    /** 
     * Count up the memory usage attributable to this node alone. LNs children are counted by their BIN/DIN parents, but INs are not counted by  their parents because they are resident on the IN list.
     */
    protected long computeMemorySize() {
    	long size = super.computeMemorySize();
    	if (dupCountLNRef != null) {
	      size += getEntryInMemorySize(dupCountLNRef.getKey(), dupCountLNRef.getTarget());
	    }
	    return size;
    }

    public static long computeOverhead(DbConfigManager configManager) throws DatabaseException {
	    return MemoryBudget.DIN_FIXED_OVERHEAD + IN.computeArraysOverhead(configManager);
    }

    protected long getMemoryOverhead(MemoryBudget mb) {
	    return mb.getDINOverhead();
    }

    /** 
     * Create a new DIN.
     */
    DIN(DatabaseImpl db, byte[] identifierKey, int capacity, byte[] dupKey, ChildReference dupCountLNRef, int level) {
	    initMemorySize();
    }

    /** 
     * Assign the Dup Count LN.
     */
    before setDupCountLN(ChildReference) {
	    updateMemorySize(this.dupCountLNRef, dupCountLNRef);
	    //original(dupCountLNRef);
    }

}
