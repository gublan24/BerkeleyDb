namespace com.sleepycat.je.cleaner;

class LookAheadCache
{
  depend de.ovgu.cide.jakutil.*;
  depend com.sleepycat.je.dbi.MemoryBudget;
  depend java.util.TreeMap;
  depend java.util.SortedMap;
    private SortedMap map;

    private int maxMem;

    private int usedMem;

    LookAheadCache(int lookAheadCacheSize) {
	map = new TreeMap();
	maxMem = lookAheadCacheSize;
    }

    boolean isEmpty() {
	return map.isEmpty();
    }

    boolean isFull() {
	return usedMem >= maxMem;
    }

    Long nextOffset() {
	return (Long) map.firstKey();
    }

    void add(Long lsnOffset, LNInfo info) {
	map.put(lsnOffset, info);
	usedMem++;
	Label166: //this.hook166(info);
    }

    LNInfo remove(Long offset) {
	LNInfo info = (LNInfo) map.remove(offset);
	if (info != null) {
	    Label167: //this.hook167(info);
	}
	return info;
    }
/*
    protected void hook166(LNInfo info) {
    }

    protected void hook167(LNInfo info) {
    }
*/
}
