namespace com.sleepycat.je.dbi;

class EnvironmentImpl_createDaemons
{
  depend de.ovgu.cide.jakutil.*;
  depend com.sleepycat.je.utilint.Tracer;
  depend com.sleepycat.je.utilint.PropUtil;
  depend com.sleepycat.je.utilint.DbLsn;
  depend com.sleepycat.je.txn.TxnManager;
  depend com.sleepycat.je.txn.Txn;
  depend com.sleepycat.je.txn.Locker;
  depend com.sleepycat.je.tree.Key;
  depend com.sleepycat.je.tree.IN;
  depend com.sleepycat.je.tree.BINReference;
  depend com.sleepycat.je.tree.BIN;
  depend com.sleepycat.je.recovery.RecoveryManager;
  depend com.sleepycat.je.recovery.RecoveryInfo;
  depend com.sleepycat.je.recovery.Checkpointer;
  depend com.sleepycat.je.log.SyncedLogManager;
  depend com.sleepycat.je.log.LogManager;
  depend com.sleepycat.je.log.FileManager;
  depend com.sleepycat.je.config.EnvironmentParams;
  depend com.sleepycat.je.cleaner.UtilizationTracker;
  depend com.sleepycat.je.cleaner.UtilizationProfile;
  depend com.sleepycat.je.cleaner.Cleaner;
  depend com.sleepycat.je.TransactionConfig;
  depend com.sleepycat.je.Transaction;
  depend com.sleepycat.je.RunRecoveryException;
  depend com.sleepycat.je.LockStats;
  depend com.sleepycat.je.EnvironmentMutableConfig;
  depend com.sleepycat.je.EnvironmentConfig;
  depend com.sleepycat.je.DbInternal;
  depend com.sleepycat.je.DatabaseException;
  depend com.sleepycat.je.DatabaseConfig;
  depend com.sleepycat.je.Database;
  depend com.sleepycat.je.CheckpointConfig;
  depend java.util.logging.SimpleFormatter;
  depend java.util.logging.Logger;
  depend java.util.logging.Level;
  depend java.util.logging.Handler;
  depend java.util.logging.FileHandler;
  depend java.util.logging.ConsoleHandler;
  depend java.util.List;
  depend java.util.Collection;
  depend java.util.ArrayList;
  depend java.io.PrintStream;
  depend java.io.IOException;
  depend java.io.File;
    protected EnvironmentImpl _this;

    protected long checkpointerWakeupTime;

    protected long compressorWakeupInterval;

    EnvironmentImpl_createDaemons(EnvironmentImpl _this) {
	this._this = _this;
    }

    void execute() throws DatabaseException {
	checkpointerWakeupTime = 0;
	this.hook329();
	_this.checkpointer = new Checkpointer(_this, checkpointerWakeupTime, "Checkpointer");
	this.hook332();
	_this.cleaner = new Cleaner(_this, "Cleaner");
    }

    protected void hook329() throws DatabaseException {
    }

    protected void hook332() throws DatabaseException {
    }

}
