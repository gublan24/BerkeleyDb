namespace com.sleepycat.je.recovery;

class RecoveryManager_trace
{
  depend de.ovgu.cide.jakutil.*;
  depend com.sleepycat.je.utilint.Tracer;
  depend com.sleepycat.je.utilint.DbLsn;
  depend com.sleepycat.je.txn.Txn;
  depend com.sleepycat.je.txn.LockType;
  depend com.sleepycat.je.tree.WithRootLatched;
  depend com.sleepycat.je.tree.TreeLocation;
  depend com.sleepycat.je.tree.Tree;
  depend com.sleepycat.je.tree.TrackingInfo;
  depend com.sleepycat.je.tree.SearchResult;
  depend com.sleepycat.je.tree.Node;
  depend com.sleepycat.je.tree.LN;
  depend com.sleepycat.je.tree.Key;
  depend com.sleepycat.je.tree.IN;
  depend com.sleepycat.je.tree.DIN;
  depend com.sleepycat.je.tree.ChildReference;
  depend com.sleepycat.je.tree.BIN;
  depend com.sleepycat.je.log.LogEntryType;
  depend com.sleepycat.je.log.LastFileReader;
  depend com.sleepycat.je.log.LNFileReader;
  depend com.sleepycat.je.log.INFileReader;
  depend com.sleepycat.je.log.FileManager;
  depend com.sleepycat.je.log.CheckpointFileReader;
  depend com.sleepycat.je.dbi.EnvironmentImpl;
  depend com.sleepycat.je.dbi.DbTree;
  depend com.sleepycat.je.dbi.DbConfigManager;
  depend com.sleepycat.je.dbi.DatabaseImpl;
  depend com.sleepycat.je.dbi.DatabaseId;
  depend com.sleepycat.je.config.EnvironmentParams;
  depend com.sleepycat.je.cleaner.UtilizationTracker;
  depend com.sleepycat.je.TransactionConfig;
  depend com.sleepycat.je.DbInternal;
  depend com.sleepycat.je.DatabaseException;
  depend com.sleepycat.je.CheckpointConfig;
  depend java.util.logging.Logger;
  depend java.util.logging.Level;
  depend java.util.Set;
  depend java.util.Map;
  depend java.util.List;
  depend java.util.Iterator;
  depend java.util.HashSet;
  depend java.util.HashMap;
  depend java.util.ArrayList;
  depend java.io.IOException;
    protected Level level;

    protected DatabaseImpl database;

    protected String debugType;

    protected boolean success;

    protected Node node;

    protected long logLsn;

    protected IN parent;

    protected boolean found;

    protected boolean replaced;

    protected boolean inserted;

    protected long replacedLsn;

    protected long abortLsn;

    protected int index;

    protected Logger logger;

    protected Level useLevel;

    protected StringBuffer sb;

    RecoveryManager_trace(Level level, DatabaseImpl database, String debugType, boolean success, Node node, long logLsn,
	    IN parent, boolean found, boolean replaced, boolean inserted, long replacedLsn, long abortLsn, int index) {
	this.level = level;
	this.database = database;
	this.debugType = debugType;
	this.success = success;
	this.node = node;
	this.logLsn = logLsn;
	this.parent = parent;
	this.found = found;
	this.replaced = replaced;
	this.inserted = inserted;
	this.replacedLsn = replacedLsn;
	this.abortLsn = abortLsn;
	this.index = index;
    }

    void execute() {
    }

}
