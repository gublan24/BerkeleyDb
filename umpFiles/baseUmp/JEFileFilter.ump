namespace com.sleepycat.je.log;

class JEFileFilter
{
  isA FilenameFilter;
  depend de.ovgu.cide.jakutil.*;
  depend java.util.StringTokenizer;
  depend java.io.FilenameFilter;
  depend java.io.File;
    String[] suffix;

    JEFileFilter(String[] suffix) {
	this.suffix = suffix;
    }

    private boolean matches(String fileSuffix) {
	for (int i = 0; i < suffix.length; i++) {
	    if (fileSuffix.equalsIgnoreCase(suffix[i])) {
		return true;
	    }
	}
	return false;
    }

    /** 
     * A JE file has to be of the format nnnnnnnn.suffix.
     */
    public boolean accept(File dir, String name) {
	boolean ok = false;
	StringTokenizer tokenizer = new StringTokenizer(name, ".");
	int nTokens = tokenizer.countTokens();
	if (nTokens == 2 || nTokens == 3) {
	    boolean hasVersion = (nTokens == 3);
	    String fileNumber = tokenizer.nextToken();
	    String fileSuffix = "." + tokenizer.nextToken();
	    String fileVersion = (hasVersion ? tokenizer.nextToken() : null);
	    if ((fileNumber.length() == 8) && matches(fileSuffix)) {
		try {
		    Integer.parseInt(fileNumber, 16);
		    ok = true;
		} catch (NumberFormatException e) {
		    ok = false;
		}
		if (hasVersion) {
		    try {
			Integer.parseInt(fileVersion);
			ok = true;
		    } catch (NumberFormatException e) {
			ok = false;
		    }
		}
	    }
	}
	return ok;
    }

}
