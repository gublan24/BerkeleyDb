namespace com.sleepycat.je.log;

class LogBufferPool
{
  depend com.sleepycat.je.StatsConfig;
  depend com.sleepycat.je.EnvironmentStats;
    private long nNotResident = 0;

    private long nCacheMiss = 0;

    void loadStats(StatsConfig config, EnvironmentStats stats) throws DatabaseException {
			stats.setNCacheMiss(nCacheMiss);
			stats.setNNotResident(nNotResident);
			if (config.getClear()) {
					nCacheMiss = 0;
					nNotResident = 0;
			}
			Label484: ; //this.hook484();
			long bufferBytes = 0;
			int nLogBuffers = 0;
			Label483: ; //this.hook483(bufferBytes, nLogBuffers);
	try {
			Iterator iter = bufferPool.iterator();
				while (iter.hasNext()) {
	    		LogBuffer l = (LogBuffer) iter.next();
	    		nLogBuffers++;
	    		bufferBytes += l.getCapacity();
				}
			// End hook483	
} 
finally {

			stats.setNLogBuffers(nLogBuffers);
			stats.setBufferBytes(bufferBytes);
Label483_1: ;;//
}
    }

  //   protected void hook483(long bufferBytes, int nLogBuffers) throws DatabaseException {
  //  }

    //protected void hook484() throws DatabaseException {
    //}

    before loadStats(StatsConfig , EnvironmentStats ){
			nNotResident++;
			//return original(lsn, foundBuffer);
    }

    after Label496: getReadBuffer(long ) {
			nCacheMiss++;
			//original();
    }

}
