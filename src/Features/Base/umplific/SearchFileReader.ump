namespace com.sleepycat.je.log;

class SearchFileReader
{
  isA FileReader;
  depend com.sleepycat.je.utilint.DbLsn;
  depend com.sleepycat.je.log.entry.LogEntry;
  depend com.sleepycat.je.dbi.EnvironmentImpl;
  depend com.sleepycat.je.DatabaseException;
  depend java.nio.ByteBuffer;
  depend java.io.IOException;
    private LogEntryType targetType;

    private LogEntry logEntry;

    /** 
     * Create this reader to start at a given LSN.
     */
    public SearchFileReader(EnvironmentImpl env, int readBufferSize, boolean forward, long startLsn, long endOfFileLsn,
	    LogEntryType targetType) throws IOException, DatabaseException {
	super(env, readBufferSize, forward, startLsn, null, endOfFileLsn, DbLsn.NULL_LSN);
	this.targetType = targetType;
	logEntry = targetType.getNewLogEntry();
    }

    /** 
     * @return true if this is a targetted entry.
     */
    protected boolean isTargetEntry(byte logEntryTypeNumber, byte logEntryTypeVersion) {
	return (targetType.equalsType(logEntryTypeNumber, logEntryTypeVersion));
    }

    /** 
     * This reader instantiate the first object of a given log entry.
     */
    protected boolean processEntry(ByteBuffer entryBuffer) throws DatabaseException {
	logEntry.readEntry(entryBuffer, currentEntrySize, currentEntryTypeVersion, true);
	return true;
    }

    /** 
     * @return the last object read.
     */
    public Object getLastObject() {
	return logEntry.getMainItem();
    }

}
