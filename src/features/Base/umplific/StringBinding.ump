namespace com.sleepycat.bind.tuple;

class StringBinding
{
  isA TupleBinding;
  depend com.sleepycat.util.UtfOps;
  depend com.sleepycat.je.DatabaseEntry;
    public Object entryToObject(TupleInput input) {
	return input.readString();
    }

    public void objectToEntry(Object object, TupleOutput output) {
	output.writeString((String) object);
    }

    protected TupleOutput getTupleOutput(Object object) {
	return sizedOutput((String) object);
    }

    /** 
     * Converts an entry buffer into a simple <code>String</code> value.
     * @param entryis the source entry buffer.
     * @return the resulting value.
     */
    public static String entryToString(DatabaseEntry entry) {
	return entryToInput(entry).readString();
    }

    /** 
     * Converts a simple <code>String</code> value into an entry buffer.
     * @param valis the source value.
     * @param entryis the destination entry buffer.
     */
    public static void stringToEntry(String val, DatabaseEntry entry) {
	outputToEntry(sizedOutput(val).writeString(val), entry);
    }

    /** 
     * Returns a tuple output object of the exact size needed, to avoid wasting space when a single primitive is output.
     */
    private static TupleOutput sizedOutput(String val) {
	int stringLength = (val == null) ? 1 : UtfOps.getByteLength(val.toCharArray());
	stringLength++;
	return new TupleOutput(new byte[stringLength]);
    }

}
