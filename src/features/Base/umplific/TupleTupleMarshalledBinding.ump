namespace com.sleepycat.bind.tuple;

class TupleTupleMarshalledBinding
{
  isA TupleTupleBinding;
  depend com.sleepycat.util.RuntimeExceptionWrapper;
    private Class cls;

    /** 
     * Creates a tuple-tuple marshalled binding object. <p> The given class is used to instantiate entity objects using {@link Class#forName}, and therefore must be a public class and have a public no-arguments constructor. It must also implement the  {@link MarshalledTupleEntry} and {@link MarshalledTupleKeyEntity} interfaces.</p>
     * @param clsis the class of the entity objects.
     */
    public TupleTupleMarshalledBinding(Class cls) {
	this.cls = cls;
	if (!MarshalledTupleKeyEntity.class.isAssignableFrom(cls)) {
	    throw new IllegalArgumentException(cls.toString() + " does not implement MarshalledTupleKeyEntity");
	}
	if (!MarshalledTupleEntry.class.isAssignableFrom(cls)) {
	    throw new IllegalArgumentException(cls.toString() + " does not implement MarshalledTupleEntry");
	}
    }

    public Object entryToObject(TupleInput keyInput, TupleInput dataInput) {
	MarshalledTupleEntry obj;
	try {
	    obj = (MarshalledTupleEntry) cls.newInstance();
	} catch (IllegalAccessException e) {
	    throw new RuntimeExceptionWrapper(e);
	} catch (InstantiationException e) {
	    throw new RuntimeExceptionWrapper(e);
	}
	if (dataInput != null) {
	    obj.unmarshalEntry(dataInput);
	}
	MarshalledTupleKeyEntity entity = (MarshalledTupleKeyEntity) obj;
	if (keyInput != null) {
	    entity.unmarshalPrimaryKey(keyInput);
	}
	return entity;
    }

    public void objectToKey(Object object, TupleOutput output) {
	MarshalledTupleKeyEntity entity = (MarshalledTupleKeyEntity) object;
	entity.marshalPrimaryKey(output);
    }

    public void objectToData(Object object, TupleOutput output) {
	MarshalledTupleEntry entity = (MarshalledTupleEntry) object;
	entity.marshalEntry(output);
    }

}
